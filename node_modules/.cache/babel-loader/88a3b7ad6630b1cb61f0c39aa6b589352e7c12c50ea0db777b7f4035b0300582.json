{"ast":null,"code":"var _jsxFileName = \"/home/kaushik/Documents/Projects/template-filler/src/components/Sidebar.js\";\nimport { LoadHTML, MakeHTMLTemplate } from \"../TemplateHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sidebar(props) {\n  const links = [];\n  const images = [];\n  const textElements = [];\n  const LoadHTML = event => {\n    var file = event.target.files[0];\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsText(file, \"UTF-8\");\n      reader.onload = function (evt) {\n        document.getElementById(\"renderer\").innerHTML = evt.target.result;\n\n        // Get all elements in the document\n        SetUpEditor();\n      };\n      reader.onerror = function (evt) {\n        document.getElementById(\"renderer\").innerHTML = \"error reading file\";\n        console.log(evt);\n      };\n    }\n  };\n  const SetUpEditor = () => {\n    const allElements = document.getElementById(\"renderer\").querySelectorAll('*');\n    textElements.length = 0;\n    images.length = 0;\n    links.length = 0;\n    allElements.forEach(element => {\n      // Check if the element has only text nodes (no nested HTML tags)\n      const hasText = Array.from(element.childNodes).some(node => node.nodeType === Node.TEXT_NODE);\n      if (hasText && element.textContent.trim() !== '') {\n        elementsWithText.push(element);\n      }\n    });\n    textElements.forEach(lmnt => {\n      lmnt.setAttribute(\"contenteditable\", true);\n      lmnt.addEventListener(\"input\", function (event) {\n        DetectParams(event.target, event.target.textContent);\n      }, false);\n    });\n    links.concat(document.getElementById(\"renderer\").querySelectorAll(\"a\"));\n    links.forEach(lmnt => {\n      if (lmnt.textContent.trim() == '') {\n        lmnt.onclick = e => {\n          e.preventDefault();\n        };\n      }\n      lmnt.ondblclick = e => {\n        e.preventDefault();\n        const newlink = window.prompt(\"Set This Hyperlink\", e.target.closest(\"a\").getAttribute(\"href\"));\n        if (newlink !== null) {\n          e.target.closest(\"a\").href = newlink;\n          DetectParams(e.target.closest(\"a\"), newlink);\n        }\n      };\n    });\n    images.concat(document.getElementById(\"renderer\").querySelectorAll(\"img\"));\n    images.forEach(lmnt => {\n      lmnt.onclick = e => {\n        if (e.ctrlKey) {\n          e.preventDefault();\n          const newsrc = window.prompt(\"Set This Image Source\", e.target.closest(\"img\").getAttribute(\"src\"));\n          if (newsrc !== null && newsrc !== 'none') {\n            e.target.closest(\"img\").src = newsrc;\n            DetectParams(e.target.closest(\"img\"), newsrc);\n          }\n        }\n      };\n    });\n    // DetectParamsGlobal()\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"sidenav\",\n    id: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"HTML Upload\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: LoadHTML\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"CSV Upload\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["LoadHTML","MakeHTMLTemplate","jsxDEV","_jsxDEV","Sidebar","props","links","images","textElements","event","file","target","files","reader","FileReader","readAsText","onload","evt","document","getElementById","innerHTML","result","SetUpEditor","onerror","console","log","allElements","querySelectorAll","length","forEach","element","hasText","Array","from","childNodes","some","node","nodeType","Node","TEXT_NODE","textContent","trim","elementsWithText","push","lmnt","setAttribute","addEventListener","DetectParams","concat","onclick","e","preventDefault","ondblclick","newlink","window","prompt","closest","getAttribute","href","ctrlKey","newsrc","src","class","id","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kaushik/Documents/Projects/template-filler/src/components/Sidebar.js"],"sourcesContent":["import {LoadHTML, MakeHTMLTemplate} from \"../TemplateHandler\"\n\nfunction Sidebar(props){\n\n    const links = [];\n    const images = [];\n    const textElements = [];\n\n    const LoadHTML = (event) => {\n        var file = event.target.files[0]\n        if (file) {\n            var reader = new FileReader();\n            reader.readAsText(file, \"UTF-8\");\n            reader.onload = function (evt) {\n                document.getElementById(\"renderer\").innerHTML = evt.target.result;\n    \n                // Get all elements in the document\n                SetUpEditor()\n            }\n            reader.onerror = function (evt) {\n                document.getElementById(\"renderer\").innerHTML = \"error reading file\";\n                console.log(evt)\n            }\n        }\n    }\n\n    const SetUpEditor = ()=>{\n        const allElements = document.getElementById(\"renderer\").querySelectorAll('*');\n\n        textElements.length = 0;\n        images.length = 0;\n        links.length = 0;\n\n        allElements.forEach(element => {\n            // Check if the element has only text nodes (no nested HTML tags)\n            const hasText = Array.from(element.childNodes).some(\n                node => node.nodeType === Node.TEXT_NODE\n            );\n            \n            if (hasText && element.textContent.trim() !== '') {\n            elementsWithText.push(element);\n            }\n        });\n\n        textElements.forEach(lmnt => {\n            lmnt.setAttribute(\"contenteditable\", true)\n            lmnt.addEventListener(\"input\", function(event) {\n                DetectParams(event.target, event.target.textContent)\n            }, false);\n        });\n\n        links.concat(document.getElementById(\"renderer\").querySelectorAll(\"a\"))\n        links.forEach(lmnt => {\n            if(lmnt.textContent.trim() == ''){\n                lmnt.onclick = (e)=>{\n                    e.preventDefault();\n                }\n            }\n            lmnt.ondblclick = (e)=>{\n                e.preventDefault();\n                const newlink = window.prompt(\"Set This Hyperlink\", e.target.closest(\"a\").getAttribute(\"href\"))\n                if (newlink !== null){\n                    e.target.closest(\"a\").href = newlink\n                    DetectParams(e.target.closest(\"a\"), newlink)\n                }\n            }\n        })\n\n        images.concat(document.getElementById(\"renderer\").querySelectorAll(\"img\"));\n        images.forEach(lmnt => {\n            lmnt.onclick = e =>{\n                if(e.ctrlKey){\n                    e.preventDefault();\n                    const newsrc = window.prompt(\"Set This Image Source\", e.target.closest(\"img\").getAttribute(\"src\"));\n                    if (newsrc !== null && newsrc !== 'none'){\n                        e.target.closest(\"img\").src = newsrc;\n                        DetectParams(e.target.closest(\"img\"), newsrc)\n                    }\n                }\n            }\n        })\n        // DetectParamsGlobal()\n    }\n\n    return (\n        <div class=\"sidenav\" id='sidebar'>\n            <label>HTML Upload<input type=\"file\" onChange={LoadHTML}></input></label>\n            <label>CSV Upload<input type=\"file\"></input></label>\n        </div>\n    );\n}\nexport default Sidebar;"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,gBAAgB,QAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,OAAOA,CAACC,KAAK,EAAC;EAEnB,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,YAAY,GAAG,EAAE;EAEvB,MAAMR,QAAQ,GAAIS,KAAK,IAAK;IACxB,IAAIC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAChC,IAAIF,IAAI,EAAE;MACN,IAAIG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC7BD,MAAM,CAACE,UAAU,CAACL,IAAI,EAAE,OAAO,CAAC;MAChCG,MAAM,CAACG,MAAM,GAAG,UAAUC,GAAG,EAAE;QAC3BC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,SAAS,GAAGH,GAAG,CAACN,MAAM,CAACU,MAAM;;QAEjE;QACAC,WAAW,CAAC,CAAC;MACjB,CAAC;MACDT,MAAM,CAACU,OAAO,GAAG,UAAUN,GAAG,EAAE;QAC5BC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,SAAS,GAAG,oBAAoB;QACpEI,OAAO,CAACC,GAAG,CAACR,GAAG,CAAC;MACpB,CAAC;IACL;EACJ,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAI;IACpB,MAAMI,WAAW,GAAGR,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACQ,gBAAgB,CAAC,GAAG,CAAC;IAE7EnB,YAAY,CAACoB,MAAM,GAAG,CAAC;IACvBrB,MAAM,CAACqB,MAAM,GAAG,CAAC;IACjBtB,KAAK,CAACsB,MAAM,GAAG,CAAC;IAEhBF,WAAW,CAACG,OAAO,CAACC,OAAO,IAAI;MAC3B;MACA,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAACH,OAAO,CAACI,UAAU,CAAC,CAACC,IAAI,CAC/CC,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAKC,IAAI,CAACC,SACnC,CAAC;MAED,IAAIR,OAAO,IAAID,OAAO,CAACU,WAAW,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAClDC,gBAAgB,CAACC,IAAI,CAACb,OAAO,CAAC;MAC9B;IACJ,CAAC,CAAC;IAEFtB,YAAY,CAACqB,OAAO,CAACe,IAAI,IAAI;MACzBA,IAAI,CAACC,YAAY,CAAC,iBAAiB,EAAE,IAAI,CAAC;MAC1CD,IAAI,CAACE,gBAAgB,CAAC,OAAO,EAAE,UAASrC,KAAK,EAAE;QAC3CsC,YAAY,CAACtC,KAAK,CAACE,MAAM,EAAEF,KAAK,CAACE,MAAM,CAAC6B,WAAW,CAAC;MACxD,CAAC,EAAE,KAAK,CAAC;IACb,CAAC,CAAC;IAEFlC,KAAK,CAAC0C,MAAM,CAAC9B,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACQ,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACvErB,KAAK,CAACuB,OAAO,CAACe,IAAI,IAAI;MAClB,IAAGA,IAAI,CAACJ,WAAW,CAACC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAC;QAC7BG,IAAI,CAACK,OAAO,GAAIC,CAAC,IAAG;UAChBA,CAAC,CAACC,cAAc,CAAC,CAAC;QACtB,CAAC;MACL;MACAP,IAAI,CAACQ,UAAU,GAAIF,CAAC,IAAG;QACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClB,MAAME,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC,oBAAoB,EAAEL,CAAC,CAACvC,MAAM,CAAC6C,OAAO,CAAC,GAAG,CAAC,CAACC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC/F,IAAIJ,OAAO,KAAK,IAAI,EAAC;UACjBH,CAAC,CAACvC,MAAM,CAAC6C,OAAO,CAAC,GAAG,CAAC,CAACE,IAAI,GAAGL,OAAO;UACpCN,YAAY,CAACG,CAAC,CAACvC,MAAM,CAAC6C,OAAO,CAAC,GAAG,CAAC,EAAEH,OAAO,CAAC;QAChD;MACJ,CAAC;IACL,CAAC,CAAC;IAEF9C,MAAM,CAACyC,MAAM,CAAC9B,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACQ,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC1EpB,MAAM,CAACsB,OAAO,CAACe,IAAI,IAAI;MACnBA,IAAI,CAACK,OAAO,GAAGC,CAAC,IAAG;QACf,IAAGA,CAAC,CAACS,OAAO,EAAC;UACTT,CAAC,CAACC,cAAc,CAAC,CAAC;UAClB,MAAMS,MAAM,GAAGN,MAAM,CAACC,MAAM,CAAC,uBAAuB,EAAEL,CAAC,CAACvC,MAAM,CAAC6C,OAAO,CAAC,KAAK,CAAC,CAACC,YAAY,CAAC,KAAK,CAAC,CAAC;UAClG,IAAIG,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,MAAM,EAAC;YACrCV,CAAC,CAACvC,MAAM,CAAC6C,OAAO,CAAC,KAAK,CAAC,CAACK,GAAG,GAAGD,MAAM;YACpCb,YAAY,CAACG,CAAC,CAACvC,MAAM,CAAC6C,OAAO,CAAC,KAAK,CAAC,EAAEI,MAAM,CAAC;UACjD;QACJ;MACJ,CAAC;IACL,CAAC,CAAC;IACF;EACJ,CAAC;EAED,oBACIzD,OAAA;IAAK2D,KAAK,EAAC,SAAS;IAACC,EAAE,EAAC,SAAS;IAAAC,QAAA,gBAC7B7D,OAAA;MAAA6D,QAAA,GAAO,aAAW,eAAA7D,OAAA;QAAO8D,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAElE;MAAS;QAAAmE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzEnE,OAAA;MAAA6D,QAAA,GAAO,YAAU,eAAA7D,OAAA;QAAO8D,IAAI,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEd;AAACC,EAAA,GAxFQnE,OAAO;AAyFhB,eAAeA,OAAO;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}