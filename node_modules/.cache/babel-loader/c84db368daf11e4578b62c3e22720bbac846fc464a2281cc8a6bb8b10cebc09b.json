{"ast":null,"code":"/* global define, require */\n'use strict';\n\nexports.__esModule = true;\nvar _utils = require('../utils');\nvar SourceNode = undefined;\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we assume that\n    // they are running on the browser and thus have no need for the source-map library.\n    var SourceMap = require('source-map');\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {}\n/* NOP */\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function (line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function add(chunks) {\n      if (_utils.isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function prepend(chunks) {\n      if (_utils.isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function toStringWithSourceMap() {\n      return {\n        code: this.toString()\n      };\n    },\n    toString: function toString() {\n      return this.src;\n    }\n  };\n}\nfunction castChunk(chunk, codeGen, loc) {\n  if (_utils.isArray(chunk)) {\n    var ret = [];\n    for (var i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\nCodeGen.prototype = {\n  isEmpty: function isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function prepend(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function push(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n  merge: function merge() {\n    var source = this.empty();\n    this.each(function (line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n  each: function each(iter) {\n    for (var i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n  empty: function empty() {\n    var loc = this.currentLocation || {\n      start: {}\n    };\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function wrap(chunk) {\n    var loc = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || {\n      start: {}\n    } : arguments[1];\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n    chunk = castChunk(chunk, this, loc);\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);\n  },\n  functionCall: function functionCall(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n  quotedString: function quotedString(str) {\n    return '\"' + (str + '').replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n    .replace(/\\u2029/g, '\\\\u2029') + '\"';\n  },\n  objectLiteral: function objectLiteral(obj) {\n    // istanbul ignore next\n\n    var _this = this;\n    var pairs = [];\n    Object.keys(obj).forEach(function (key) {\n      var value = castChunk(obj[key], _this);\n      if (value !== 'undefined') {\n        pairs.push([_this.quotedString(key), ':', value]);\n      }\n    });\n    var ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n  generateList: function generateList(entries) {\n    var ret = this.empty();\n    for (var i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n      ret.add(castChunk(entries[i], this));\n    }\n    return ret;\n  },\n  generateArray: function generateArray(entries) {\n    var ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n    return ret;\n  }\n};\nexports['default'] = CodeGen;\nmodule.exports = exports['default'];","map":{"version":3,"names":["SourceNode","undefined","define","amd","SourceMap","require","err","line","column","srcFile","chunks","src","add","prototype","_utils","isArray","join","prepend","toStringWithSourceMap","code","toString","castChunk","chunk","codeGen","loc","ret","i","len","length","push","wrap","CodeGen","source","isEmpty","unshift","merge","empty","each","iter","currentLocation","start","arguments","functionCall","fn","type","params","generateList","quotedString","str","replace","objectLiteral","obj","pairs","Object","keys","forEach","key","value","_this","entries","generateArray"],"sources":["/home/kaushik/Documents/Projects/TemplateFillerReact/node_modules/handlebars/lib/handlebars/compiler/code-gen.js"],"sourcesContent":["/* global define, require */\nimport { isArray } from '../utils';\n\nlet SourceNode;\n\ntry {\n  /* istanbul ignore next */\n  if (typeof define !== 'function' || !define.amd) {\n    // We don't support this in AMD environments. For these environments, we assume that\n    // they are running on the browser and thus have no need for the source-map library.\n    let SourceMap = require('source-map');\n    SourceNode = SourceMap.SourceNode;\n  }\n} catch (err) {\n  /* NOP */\n}\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function(line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function(chunks) {\n      if (isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function() {\n      return { code: this.toString() };\n    },\n    toString: function() {\n      return this.src;\n    }\n  };\n}\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (isArray(chunk)) {\n    let ret = [];\n\n    for (let i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n\n  merge: function() {\n    let source = this.empty();\n    this.each(function(line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n\n  each: function(iter) {\n    for (let i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n\n  empty: function() {\n    let loc = this.currentLocation || { start: {} };\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function(chunk, loc = this.currentLocation || { start: {} }) {\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n\n    return new SourceNode(\n      loc.start.line,\n      loc.start.column,\n      this.srcFile,\n      chunk\n    );\n  },\n\n  functionCall: function(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n\n  quotedString: function(str) {\n    return (\n      '\"' +\n      (str + '')\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g, '\\\\\"')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n        .replace(/\\u2029/g, '\\\\u2029') +\n      '\"'\n    );\n  },\n\n  objectLiteral: function(obj) {\n    let pairs = [];\n\n    Object.keys(obj).forEach(key => {\n      let value = castChunk(obj[key], this);\n      if (value !== 'undefined') {\n        pairs.push([this.quotedString(key), ':', value]);\n      }\n    });\n\n    let ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n\n  generateList: function(entries) {\n    let ret = this.empty();\n\n    for (let i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n\n  generateArray: function(entries) {\n    let ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n\n    return ret;\n  }\n};\n\nexport default CodeGen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}